{"version":3,"sources":["components/GlobalStore.js","components/Navbar.js","components/Main.js","components/Chatroom.js","App.js","index.js"],"names":["initialData","winX","window","innerWidth","winY","innerHeight","openNavExt","dataReducer","state","action","do","Error","type","StoreContext","createContext","StoreProvider","props","useReducer","dispatch","useEffect","handleResize","addEventListener","removeEventListener","Provider","value","Navbar","winLocation","useHistory","AppBar","position","Toolbar","IconButton","edge","color","onClick","Menu","Typography","variant","style","flexGrow","Button","push","Home","Main","Paper","classes","root","Chatroom","socket","useRef","useState","res","setRes","current","socketIO","on","data","console","log","disconnect","Card","className","emit","App","Container","maxWidth","marginTop","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAEMA,EAAc,CAClBC,KAAKC,OAAOC,WACZC,KAAKF,OAAOG,YACZC,YAAW,GAIPC,EAAc,SAACC,EAAOC,GAC1B,OAAQA,EAAOC,IACf,IAAK,SACH,OAAO,2BAAIF,GAAX,IAAkBP,KAAKC,OAAOC,WAAYC,KAAKF,OAAOG,cACxD,IAAK,UACH,OAAO,2BAAIG,GAAX,IAAkBF,YAAaE,EAAMF,aACvC,QACE,MAAM,IAAIK,MAAJ,+BAAkCF,EAAOG,SAI7CC,EAAeC,0BAEfC,EAAgB,SAASC,GAAO,IAAD,EACTC,qBAAYV,EAAaP,GADhB,mBAC5BQ,EAD4B,KACrBU,EADqB,KASnC,OANAC,qBAAU,WAER,SAASC,IAAiBF,EAAS,CAACR,GAAG,WAEvC,OADAR,OAAOmB,iBAAiB,SAAUD,GAC3B,kBAAMlB,OAAOoB,oBAAoB,SAAUF,OAE7C,cAACP,EAAaU,SAAd,aAAuBC,MAAO,CAAChB,EAAOU,IAAeF,K,+DCP/CS,MAnBf,WAEE,IAAMC,EAAcC,cAKpB,OACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQC,MAAM,UAAUC,QAAS,KAAlD,SAAwD,cAACC,EAAA,EAAD,MACxD,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAO,CAACC,SAAS,GAA1C,uBACA,cAACC,EAAA,EAAD,CAAQP,MAAM,UAAUC,QAP9B,WAA0BR,EAAYe,KAAK,cAOrC,sBACA,cAACV,EAAA,EAAD,CAAYC,KAAK,MAAMC,MAAM,UAAUC,QAT7C,WAAsBR,EAAYe,KAAK,MASjC,SAA0D,cAACC,EAAA,EAAD,Y,iBCRnDC,MARf,WACE,OACE,cAACC,EAAA,EAAD,CAAOC,QAAS,CAACC,KAAK,aAAtB,kB,0BCoCWC,MApCf,WAEE,IAAMC,EAASC,iBAAO,MAFJ,EAGIC,mBAAS,IAHb,mBAGXC,EAHW,KAGNC,EAHM,KA2BlB,OAtBAjC,qBAAU,WAcR,OAZA6B,EAAOK,QAAUC,MAEjBN,EAAOK,QAAQE,GAAG,cAAc,SAACC,GAC/BC,QAAQC,IAAI,6BACZN,EAAOI,MAGTR,EAAOK,QAAQE,GAAG,SAAS,SAACC,GAC1BJ,EAAOI,MAIF,kBAAMR,EAAOK,QAAQM,gBAC5B,IAQA,eAACC,EAAA,EAAD,CAAMC,UAAU,gBAAhB,UACE,cAACzB,EAAA,EAAD,mBACA,cAACI,EAAA,EAAD,CAAQH,QAAQ,YAAYH,QARhC,WACEuB,QAAQC,IAAI,0BACZV,EAAOK,QAAQS,KAAK,MAAO,oBAMqB7B,MAAM,UAApD,oCACA,cAACG,EAAA,EAAD,UAAae,QCTJY,MAlBf,WACE,OACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAAKJ,UAAU,MAAMvB,MAAO,CAAC4B,UAAU,UAA3D,UAEE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SAAsB,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOA,KAAK,YAAZ,SAAwB,cAAC,EAAD,iBCbpCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.d43b53ab.chunk.js","sourcesContent":["import { createContext, useReducer, useContext, useEffect } from \"react\";\r\n\r\nconst initialData = {\r\n  winX:window.innerWidth, \r\n  winY:window.innerHeight,\r\n  openNavExt:false\r\n};\r\n\r\n/*! IMPORTANT all your reducer functionality goes here */\r\nconst dataReducer = (state, action) => {\r\n  switch (action.do) {\r\n  case \"resize\":\r\n    return {...state, winX:window.innerWidth, winY:window.innerHeight};\r\n  case \"nav-ext\":\r\n    return {...state, openNavExt: !state.openNavExt};\r\n  default:\r\n    throw new Error(`Invalid action type: ${action.type}`);\r\n  }\r\n}\r\n\r\nconst StoreContext = createContext();\r\n\r\nconst StoreProvider = function(props){\r\n  const [state, dispatch] = useReducer( dataReducer, initialData );\r\n\r\n  useEffect(() => {\r\n    // add listeners for window resize\r\n    function handleResize() { dispatch({do:\"resize\"}) };\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  })\r\n  return <StoreContext.Provider value={[state, dispatch]} {...props} />;\r\n}\r\n\r\nconst useStoreContext = function(){ return useContext(StoreContext) };\r\n\r\nexport { StoreProvider, useStoreContext }","import { useHistory } from \"react-router-dom\";\r\n// import { useStoreContext } from \"./GlobalStore\";\r\nimport { AppBar, Toolbar, Button, Typography, IconButton } from '@material-ui/core';\r\nimport { Menu as MenuIcon, Home as HomeIcon } from '@material-ui/icons';\r\n\r\nfunction Navbar() {\r\n\r\n  const winLocation = useHistory();\r\n\r\n  function goToMain() { winLocation.push(\"/\") }\r\n  function goToChatroom() { winLocation.push(\"/chatroom\") }\r\n\r\n  return(\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" color=\"inherit\" onClick={null}><MenuIcon /></IconButton>\r\n        <Typography variant=\"h6\" style={{flexGrow:1}}>Socket IM</Typography>\r\n        <Button color=\"inherit\" onClick={goToChatroom}>Chatroom</Button>\r\n        <IconButton edge=\"end\" color=\"inherit\" onClick={goToMain}><HomeIcon /></IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import { Paper } from \"@material-ui/core\";\r\n\r\nfunction Main() {\r\n  return(\r\n    <Paper classes={{root:\"main-card\"}}>\r\n      App\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Main;","import { useState, useEffect, useRef } from 'react';\r\nimport { Card, Typography, Button } from \"@material-ui/core\";\r\nimport socketIO from 'socket.io-client';\r\n\r\nfunction Chatroom() {\r\n\r\n  const socket = useRef(null);\r\n  const [res, setRes] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // establishing socketIO connection\r\n    socket.current = socketIO();\r\n    // event: server sent connection confirmation\r\n    socket.current.on('connection', (data) => {\r\n      console.log(\"received ping from server\");\r\n      setRes(data);\r\n    })\r\n    // event: server sent message\r\n    socket.current.on(\"msgex\", (data) => {\r\n      setRes(data);\r\n    })\r\n    \r\n    // disconnect on component unload\r\n    return () => socket.current.disconnect();\r\n  },[])\r\n\r\n  function sendMsg() {\r\n    console.log(\"send message to server\");\r\n    socket.current.emit(\"msg\", \"sending message\");\r\n  }\r\n\r\n  return(\r\n    <Card className=\"chatroom-card\">\r\n      <Typography>Chat</Typography>\r\n      <Button variant=\"contained\" onClick={sendMsg} color=\"primary\">Send message to server</Button>\r\n      <Typography>{res}</Typography>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Chatroom;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './components/style.css';\nimport { StoreProvider } from './components/GlobalStore';\nimport Navbar from './components/Navbar';\nimport { Container } from '@material-ui/core';\nimport Main from './components/Main';\nimport Chatroom from './components/Chatroom';\n\nfunction App() {\n  return (\n    <StoreProvider>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Container maxWidth='md' className=\"App\" style={{marginTop:\"0.8rem\"}}>\n            {/* Content to switch between */}\n            <Route exact path=\"/\"><Main /></Route>\n            <Route path=\"/chatroom\"><Chatroom /></Route>\n          </Container>\n        </Switch>\n        {/* Footer */}\n      </Router>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}