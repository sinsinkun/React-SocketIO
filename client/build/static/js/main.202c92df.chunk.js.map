{"version":3,"sources":["components/GlobalStore.js","components/Navbar.js","components/Main/index.js","components/Chatroom/Messageslist.js","components/Chatroom/Roomlist.js","components/Chatroom/Userlist.js","components/Chatroom/index.js","App.js","index.js"],"names":["initialData","winX","window","innerWidth","winY","innerHeight","user","room","theme","createMuiTheme","palette","primary","main","secondary","tertiary","reduceFn","state","action","do","name","Error","StoreContext","createContext","StoreProvider","props","useReducer","dispatch","useEffect","handleResize","addEventListener","removeEventListener","Provider","value","ThemeProvider","children","useStoreContext","useContext","Navbar","winLocation","useHistory","AppBar","position","Toolbar","variant","Typography","style","flexGrow","IconButton","edge","color","onClick","push","Home","Main","useState","setUser","updateStore","login","e","preventDefault","Container","maxWidth","marginTop","Paper","className","elevation","noValidate","autoComplete","onSubmit","margin","TextField","fullWidth","label","onChange","target","Button","MessagesList","msgs","setMsgs","input","setInput","endOfMsgs","useRef","sendMsg","refresh","newMsgs","rMsg","length","shift","current","scrollIntoView","disableGutters","List","map","msg","ListItem","ref","Grid","container","xs","item","marginRight","size","onKeyPress","key","RoomList","rooms","setRooms","store","a","fetch","then","r","json","roomData","getRooms","button","joinRoom","innerText","Userlist","users","setUsers","usersData","getUsers","Chatroom","socket","newRooms","setNewRooms","setNewMsgs","newUsers","setNewUsers","setRMsg","socketIO","emit","on","data","prev","disconnect","spacing","md","sm","Card","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.202c92df.chunk.js","sourcesContent":["import { createContext, useReducer, useContext, useEffect } from \"react\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst initialData = {\r\n  winX:window.innerWidth, \r\n  winY:window.innerHeight,\r\n  user:\"\",\r\n  room:\"\",\r\n  theme:createMuiTheme({\r\n    palette: {\r\n      primary: { main: \"#673ab7\" },\r\n      secondary: { main: \"#2979ff\" },\r\n      tertiary: { main: \"#1de9b6\" }\r\n    }\r\n  })\r\n};\r\n\r\n/*! IMPORTANT all your reducer functionality goes here */\r\nconst reduceFn = (state, action) => {\r\n  switch (action.do) {\r\n  case \"resize\":\r\n    return {...state, winX:window.innerWidth, winY:window.innerHeight};\r\n  case \"signin\":\r\n    return {...state, user:action.name, room:\"Lobby\"};\r\n  default:\r\n    throw new Error(`Invalid action type: ${action.do}`);\r\n  }\r\n}\r\n\r\nconst StoreContext = createContext();\r\n\r\nconst StoreProvider = function(props){\r\n  const [state, dispatch] = useReducer( reduceFn, initialData );\r\n\r\n  useEffect(() => {\r\n    // add listeners for window resize\r\n    function handleResize() { dispatch({do:\"resize\"}) };\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  })\r\n  return (\r\n    <StoreContext.Provider value={[state, dispatch]}>\r\n      <ThemeProvider theme={state.theme}>\r\n        {props.children}\r\n      </ThemeProvider>\r\n    </StoreContext.Provider>\r\n  )\r\n}\r\n\r\nconst useStoreContext = function(){ return useContext(StoreContext) };\r\n\r\nexport { StoreProvider, useStoreContext }","import { useHistory } from \"react-router-dom\";\r\nimport { AppBar, Toolbar, Typography, IconButton } from '@material-ui/core';\r\nimport { Home as HomeIcon } from '@material-ui/icons';\r\n\r\nfunction Navbar() {\r\n\r\n  const winLocation = useHistory();\r\n\r\n  function goToMain() { winLocation.push(\"/\") }\r\n\r\n  return(\r\n    <AppBar position=\"static\">\r\n      <Toolbar variant=\"dense\">\r\n        <Typography variant=\"h6\" style={{flexGrow:1}}>Socket IM</Typography>\r\n        <IconButton edge=\"end\" color=\"inherit\" onClick={goToMain}><HomeIcon /></IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import { Container, Paper, TextField, Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStoreContext } from \"../GlobalStore\";\r\n\r\nfunction Main() {\r\n\r\n  const [user, setUser] = useState(\"\");\r\n  const [, updateStore] = useStoreContext();\r\n  const winLocation = useHistory();\r\n\r\n  function login(e) {\r\n    e.preventDefault();\r\n    updateStore({ do:\"signin\", name:user });\r\n    winLocation.push(\"/chatroom\");\r\n  }\r\n\r\n  return(\r\n    <Container maxWidth='sm' style={{marginTop:\"8rem\"}} >\r\n      <Paper className=\"main-card\" elevation={3} >\r\n        <form noValidate autoComplete=\"off\" onSubmit={e => login(e)}>\r\n          <div style={{margin:\"0.5rem 2rem\"}}>\r\n            <TextField fullWidth label=\"Username\" variant=\"standard\" \r\n              value={user} onChange={e => setUser(e.target.value)} />\r\n          </div>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={e => login(e)}>Enter Chatroom</Button>\r\n        </form>\r\n      </Paper>\r\n    </Container>  \r\n  )\r\n}\r\n\r\nexport default Main;","import { Container, Button, TextField, Grid, List, ListItem } from \"@material-ui/core\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\n\r\nfunction MessagesList(props) {\r\n\r\n  const [msgs, setMsgs] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const endOfMsgs = useRef();\r\n\r\n  useEffect(() => {\r\n    setMsgs([]);\r\n  }, [props.refresh])\r\n\r\n  useEffect(() => {\r\n    let newMsgs = msgs;\r\n    if (props.rMsg) newMsgs.push(props.rMsg);\r\n    if (newMsgs.length > 20) newMsgs.shift();\r\n    setMsgs([...newMsgs]);\r\n    // eslint-disable-next-line\r\n  }, [props.rMsg])\r\n\r\n  useEffect(() => {\r\n    endOfMsgs.current.scrollIntoView();\r\n  })\r\n\r\n  function pressEnter(e) {\r\n    if (e.key === \"Enter\") sendMsg();\r\n  }\r\n\r\n  function sendMsg() {\r\n    props.sendMsg(input);\r\n    setInput(\"\");\r\n  }\r\n\r\n  return(\r\n    <Container disableGutters className=\"msg-col\">\r\n      <div className=\"msg-list\">\r\n        <List>\r\n        {msgs.map(msg => {\r\n          return <ListItem>{msg.user}: {msg.msg}</ListItem>\r\n        })}\r\n        <end ref={endOfMsgs} />\r\n        </List>\r\n      </div>\r\n\r\n      <Grid container className=\"msg-input-area\">\r\n        <Grid xs item>\r\n          <div style={{marginRight:\"0.5rem\"}}>\r\n          <TextField fullWidth size=\"small\" label=\"New Message\" variant=\"filled\" className=\"msg-input\" \r\n            color=\"secondary\" value={input} onChange={e => setInput(e.target.value)} onKeyPress={pressEnter} />\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button variant=\"contained\" onClick={sendMsg} color=\"secondary\" style={{marginTop:\"0.3rem\"}}>Send</Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default MessagesList;","import { useState, useEffect } from 'react';\r\nimport { Container, Typography, List, ListItem } from \"@material-ui/core\";\r\nimport { List as ListIcon } from '@material-ui/icons';\r\nimport { useStoreContext } from \"../GlobalStore\";\r\n\r\nfunction RoomList(props) {\r\n\r\n  const [rooms, setRooms] = useState([]);\r\n  const [store] = useStoreContext();\r\n\r\n  useEffect(() => {\r\n    getRooms();\r\n  }, [props.refresh])\r\n\r\n  async function getRooms() {\r\n    const roomData = await fetch(`/api/rooms`).then(r => r.json());\r\n    setRooms(roomData);\r\n  }\r\n\r\n  if (store.winX > 960) return(\r\n    <Container className=\"room-col\">\r\n      <Typography variant=\"h6\">Room List</Typography>\r\n      <List>\r\n        {rooms.map(room => {\r\n          return <ListItem button onClick={e => props.joinRoom(e.target.innerText)}>{room}</ListItem>\r\n        })}\r\n      </List>\r\n    </Container>\r\n  )\r\n  else return(\r\n    <Container className=\"room-col\">\r\n      <ListIcon />\r\n    </Container>\r\n  )\r\n} \r\n\r\nexport default RoomList;","import { Container, List, ListItem, Typography } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Userlist(props) {\r\n\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n    // eslint-disable-next-line\r\n  },[props.refresh])\r\n\r\n  async function getUsers() {\r\n    const usersData = await fetch(`/api/users/${props.room}`).then(r => r.json());\r\n    setUsers(usersData);\r\n  }\r\n\r\n  return(\r\n    <Container className=\"user-col\">\r\n      <Typography variant=\"h6\">User List</Typography>\r\n      <List>\r\n        {users.map(user => {\r\n          return <ListItem>{user.name}</ListItem>\r\n        })}\r\n      </List>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Userlist;","import { useState, useEffect, useRef } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Card, Container, Grid } from \"@material-ui/core\";\r\nimport socketIO from 'socket.io-client';\r\nimport { useStoreContext } from \"../GlobalStore\";\r\nimport MessagesList from './Messageslist';\r\nimport RoomList from './Roomlist';\r\nimport Userlist from './Userlist';\r\n\r\nfunction Chatroom() {\r\n\r\n  const winLocation = useHistory();\r\n  const socket = useRef(null);\r\n  const [newRooms, setNewRooms] = useState(true);\r\n  const [newMsgs, setNewMsgs] = useState(true);\r\n  const [newUsers, setNewUsers] = useState(true);\r\n  const [rMsg, setRMsg] = useState(null);\r\n  const [store] = useStoreContext();\r\n\r\n  useEffect(() => {\r\n    // if no user, redirect to main\r\n    if (!store.user) winLocation.push(\"/\");\r\n    // establishing socketIO connection\r\n    socket.current = socketIO();\r\n    socket.current.emit(\"connected\", { user:store.user, room:store.room });\r\n    // event: server sent message\r\n    socket.current.on(\"msg\", (data) => setRMsg({...data}) );\r\n    // event: refresh room/user info\r\n    socket.current.on(\"refreshUsers\", () => setNewUsers(prev => !prev));\r\n    socket.current.on(\"refreshRooms\", () => setNewRooms(prev => !prev));\r\n    socket.current.on(\"refreshMsgs\", () => setNewMsgs(prev => !prev));\r\n    // disconnect on component unload\r\n    return () => socket.current.disconnect();\r\n    // eslint-disable-next-line\r\n  },[])\r\n\r\n  function joinRoom(room) {\r\n    // leave old room\r\n    socket.current.emit(\"leave\", { user:store.user, room:store.room });\r\n    // join new room\r\n    store.room = room;\r\n    socket.current.emit(\"join\", { user:store.user, room:store.room });\r\n  }\r\n\r\n  function sendMsg(msg) {\r\n    if (msg === \"\") return;\r\n    socket.current.emit(\"msg\", { user:store.user, room:store.room, msg:msg });\r\n  }\r\n\r\n  if (store.user) return (\r\n    <Container maxWidth=\"xl\" disableGutters>\r\n      <Grid container spacing={0} fullWidth>\r\n        <Grid item md={3}><RoomList refresh={newRooms} joinRoom={joinRoom} /></Grid>\r\n        <Grid item xs md={6}><MessagesList rMsg={rMsg} refresh={newMsgs} sendMsg={sendMsg} /></Grid>\r\n        <Grid item sm={4} md={3}><Userlist room={store.room} refresh={newUsers} /></Grid>\r\n      </Grid>\r\n    </Container>\r\n  )\r\n  else return (\r\n    <Card className=\"chatroom-card\">...</Card>\r\n  )\r\n}\r\n\r\nexport default Chatroom;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './components/style.css';\r\nimport { StoreProvider } from './components/GlobalStore';\r\nimport Navbar from './components/Navbar';\r\nimport Main from './components/Main';\r\nimport Chatroom from './components/Chatroom';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <StoreProvider><Router>\r\n        <Navbar />\r\n        <Switch>\r\n          {/* Content to switch between */}\r\n          <Route exact path=\"/\"><Main /></Route>\r\n          <Route path=\"/chatroom\"><Chatroom /></Route>\r\n        </Switch>\r\n        {/* Footer */}\r\n      </Router></StoreProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}